#!/boot/rc
# ramroot startup after newns

fn getans{
	echo ' ** '$1 is':' $2 - press enter, new value, '"'clear'"', or '"'rc'"' : >>/fd/2
	answer=`{read}
	switch($answer){
	case rc
		errorshell
	case clear
		echo ''
	case ?*
		echo $answer
	case ''
		echo $2
	}
}

keyowner=`{cat /dev/hostowner}
if (! ~ $keyowner ?*){
	echo please set hostowner
	exit ''
}
usercheck=`{cat /dev/user}
if (! ~ $usercheck $keyowner){
	echo current user is not hostowner
	exit ''
}

if(~ $interactive yes){
	echo 'Answer no for any services you dont want to start. cpuport is for the cpu listener.'
	getans binddevs $binddevs
	getans setfactotum $setfactotum
	getans netsvc $netsvc
	getans hubcpu $hubcpu
	getans cpuport $cpuport
}

if(! ~ $binddevs no){
	echo -n 'binddevs...'
	for(i in f t m v L P u U '$' Σ κ)
		bind -a '#'^$i /dev >/dev/null >[2=1]
}

mntgen -s slashn && chmod 666 /srv/slashn

if(! ~ $usercheck bootes){
	mkdir /root/usr/$usercheck
	mkdir /root/usr/$usercheck/lib
	mkdir /root/usr/$usercheck/tmp
	cp /usr/bootes/lib/profile /root/usr/$usercheck/lib/profile
}

if(! ~ $setfactotum no){
	echo setting $keyowner factotum key to rootless
	echo 'key proto=p9sk1 dom=noroot.com user='$keyowner' !password=rootless' >/mnt/factotum/ctl
}

if(! ~ $netsvc no){
	echo -n 'ipconfig cs dns -r...'
	ipconfig
	ipconfig loopback /dev/null 127.1
#	cs
#	dns -r
}

if(! ~ $hubcpu no){
	echo -n 'hubfs and port 17020 cpu...'
	hub -b hubfs
	if(~ $cpuport '')
		cpuport=17020
	listen1 -t tcp!*!$cpuport /boot/cpu -R &
#	listen1 -t tcp!*!17007 /boot/exportfs &
#	timesync -n pool.ntp.org
}

font=/lib/font/bit/lucm/latin1.9.font

saveinitcfg

exit ''
