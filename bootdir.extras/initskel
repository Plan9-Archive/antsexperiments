#!/boot/rc
# ramroot startup after newns

fn getans{
	echo ' ** '$1 is':' $2 - press enter, new value, '"'clear'"', or '"'rc'"' : >>/fd/2
	answer=`{read}
	switch($answer){
	case rc
		errorshell
	case clear
		echo ''
	case ?*
		echo $answer
	case ''
		echo $2
	}
}

keyowner=`{cat /dev/hostowner}
if (! ~ $keyowner ?*){
	echo please set hostowner
	exit ''
}
usercheck=`{cat /dev/user}
if (! ~ $usercheck $keyowner){
	echo current user is not hostowner
	exit ''
}
	
if(~ $cpuport '')
	cpuport=17020

if(~ $interactive yes){
	echo 'bind hardware devices?'
	binddevs=`{getans binddevs $binddevs}
	echo 'use normal machine hostowner key?'
	setfactotum =`{getans setfactotum $setfactotum}
	echo 'start internet?'
	netsvc=`{getans netsvc $netsvc}
	echo 'start cpu listener ?'
	cpusvc=`{getans cpusvc $cpusvc}
	echo 'port for cpu listen?'
	cpuport=`{getans cpuport $cpuport}
	echo 'start persistent rc hub?'
	hubsvc=`{getans hubsvc $hubsvc}
}

if(! ~ $binddevs no){
	echo -n 'binddevs...'
	for(i in f t m v L P u U '$' Σ κ)
		bind -a '#'^$i /dev >/dev/null >[2=1]
}

echo -n 'mntgen...'
mntgen -s slashn && chmod 666 /srv/slashn

if(! ~ $usercheck bootes){
	mkdir /root/usr/$usercheck
	mkdir /root/usr/$usercheck/lib
	mkdir /root/usr/$usercheck/tmp
	cp /usr/bootes/lib/profile /root/usr/$usercheck/lib/profile
}

if(~ $setfactotum no){
	echo 'setting '$keyowner' factotum key to rootless'
	echo 'key proto=p9sk1 dom=noroot.com user='$keyowner' !password=rootless' >/mnt/factotum/ctl
}

if(! ~ $netsvc no){
	echo -n 'ipconfig...'
	ipconfig
	ipconfig loopback /dev/null 127.1
}

if(~ $justipconfig no){
	echo -n 'cs and dns -r...'
	cs
	dns -r
}

if(! ~ $cpusvc no){
	echo -n 'hubfs...'
	hub -b hubfs
	echo -n 'listen1 cpu -R...'
	listen1 -t tcp!*!$cpuport /boot/cpu -R &
}

if(! ~ $hubsvc no){
	echo -n 'hubfs...'
	hub -b hubfs
}

if(~ $staysane no){
	echo 'exporting writable root to the whole internet on port 17007!!!'
	listen1 -t tcp!*!17007 /boot/exportfs &
}

if(~ $font ''){
	font=/lib/font/bit/lucm/latin1.9.font
}

saveinitcfg

exit ''
