#!/bin/rc
# build script for advanced namespace tools/rootless boot kernel
# build clean, build patched, build tools, build extras, build bootpaq, build docs
# build ramfs / build

if(! test -e bootdir.extras){
	echo 'This build script must be run only from the base rootless directory'
	exit wrong.dir
}

if(~ `{pwd} /tmp*){
	echo 'The /tmp directory is used by the build process - cannot build here'
	exit wrong.dir
}

##	set up namespace so we keep everything we do contained

rfork ne
. /$objtype/mkfile
builddir=`{pwd}
if(! test -d compiletemp){
	echo 'mkdir compiletemp'	
	mkdir compiletemp
}
if(! test -d bootdir.extras/root/n){
	echo 'creating bootdir.extras/root skeleton'
	cd bootdir.extras
	tar xf skel.tar
	cd $builddir
}
if(! test -d root/bin){
	echo 'creating root tools skeleton'
	tar xzf root.targz
}

if(~ $1 9front){
	portversion=port
	cd /dist/plan9front
	if(~ $timezone '')
		timezone=`{cat /adm/timezone/local}
	9frontver=`{hg log -r tip}
	if(~ $9frontver(2) 4661:a15f0069aa9d){
		echo detected version 4661
		portversion=port4661
	}
	cd $builddir
	bind -c frontmods/grio grio
	bind -bc frontmods/patched patched
	bind -bc frontmods/bootdir bootdir.extras
	build extras
	build patched
	build bootpaq
	build tools
	bind -bc frontmods/boot /sys/src/9/boot
	bind -bc frontmods/$portversion /sys/src/9/port
	bind -bc frontmods/pc /sys/src/9/pc
	bind -bc frontmods/pc64 /sys/src/9/pc64
	bind -bc compiletemp /sys/src/9/pc
	if(~ $objtype amd64){
		unmount compiletemp /sys/src/9/pc
		bind -bc compiletemp /sys/src/9/pc64
	}
	bind . /n/rootless
	cd /sys/src/9/pc
	if(~ $objtype amd64)
		cd /sys/src/9/pc64
	mk
	cd $builddir
	if(test -e compiletemp/9pcf){
		cp compiletemp/9pcf 9ants
		sha1sum 9ants >>build.hashes
		echo 9ants kernel built
	}
	if(test -e compiletemp/9pc64){
		cp compiletemp/9pc64 9ants64
		sha1sum 9ants64 >>build.hashes
		echo 9ants64 kernel built
	}
	exit
}

if(~ $1 fronthost){
	echo 'installing ANTS userspace tools'
	bind -bc frontmods/grio grio
	bind -bc frontmods/patched patched
	bind -bc frontmods/bootdir bootdir.extras
	build extras
	cd hubfs1.1
	mk install
	cd ..
	cd patched
	$CC -FTVw gridlisten.c
	$LD -o gridlisten gridlisten.$O
	cp gridlisten /$objtype/bin
	cd ..
	cp frontmods/bootdir/grio /$objtype/bin
	cp scripts/* /rc/bin
	cp bootdir.extras/namespace.saveterm /lib/namespace.saveterm
	cp bootdir.extras/namespace.save9front /lib/namespace.save9front
	cp doc/man.cpns /sys/man/1/cpns
	cp doc/man.rerootwin /sys/man/1/rerootwin
	cp doc/man.addwrroot /sys/man/1/addwrroot
	cp doc/man.plan9rc /sys/man/8/plan9rc
	cp doc/man.ventiprog /sys/man/8/ventiprog
	cp doc/antspaper.ms /sys/doc/ants.ms
	cp doc/ants.ps /sys/doc/ants.ps
	mv /sys/man/3/proc /sys/man/3/oldproc
	cp doc/modified.manpages/proc.man /sys/man/3/proc
	echo 'ANTS userspace installed, if using ANTS kernel add this to the end of /rc/bin/termrc:'
	echo 'home=/usr/$user; cd; . $home/lib/profile'
	exit
}

if(~ $1 portsinstall){
	cd hubfs1.1
	mk install
	cd ..
	cd patched
	8c -FTVw gridlisten.c
	8l -o gridlisten gridlisten.8
	cp gridlisten /$objtype/bin
	cd ..
	cp frontmods/bootdir/grio /$objtype/bin
	cp scripts/* /rc/bin
	cp bootdir.extras/namespace.saveterm /lib/namespace.saveterm
	cp bootdir.extras/namespace.save9front /lib/namespace.save9front
	cp doc/man.cpns /sys/man/1/cpns
	cp doc/man.rerootwin /sys/man/1/rerootwin
	cp doc/man.addwrroot /sys/man/1/addwrroot
	cp doc/man.plan9rc /sys/man/8/plan9rc
	cp doc/man.ventiprog /sys/man/8/ventiprog
	cp doc/antspaper.ms /sys/doc/ants.ms
	cp doc/ants.ps /sys/doc/ants.ps
	cp doc/modified.manpages/proc.man /sys/man/3/procns
	echo 'add the following to the end of /rc/bin/termrc'
	echo 'home=/usr/$user; cd; . $home/lib/profile'
	echo 'copy 9ants kernel to boot partition and edit plan9.ini'
	echo 'enter bootfile=9ants at bootup for new kernel'
	exit
}

if(~ $1 portsuninstall){
	rm /$objtype/bin/grio
	rm /$objtype/bin/gridlisten
	rm /lib/namespace.saveterm
	rm /lib/namespace.save9front
	rm /sys/man/1/cpns
	rm /sys/man/1/rerootwin
	rm /sys/man/1/addwrroot
	rm /sys/man/8/plan9rc
	rm /sys/man/8/ventiprog
	rm /sys/doc/ants.ms
	rm /sys/doc/ants.ps
	rm /sys/man/3/procns
	cp scripts/* /rc/bin
	rm /rc/bin/addns
	rm /rc/bin/addroroot
	rm /rc/bin/addsources
	rm /rc/bin/addwrroot
	rm /rc/bin/cpns
	rm /rc/bin/cpsys
	rm /rc/bin/foshalt
	rm /rc/bin/fosreset
	rm /rc/bin/fossilconf
	rm /rc/bin/fossilize
	rm /rc/bin/fossilstart
	rm /rc/bin/frontstart
	rm /rc/bin/getdevs
	rm /rc/bin/gridhubrc
	rm /rc/bin/gui
	rm /rc/bin/hubrc
	rm /rc/bin/importroroot
	rm /rc/bin/importwrroot
	rm /rc/bin/mountsrvfs
	rm /rc/bin/rerootwin
	rm /rc/bin/riobind
	rm /rc/bin/riopush
	rm /rc/bin/savedevs
	rm /rc/bin/subns
	rm /rc/bin/venticonf
	rm /rc/bin/ventiprog
	rm /rc/bin/winpush
	exit
}

if(~ $1 9frontinstall){
	if (! test -e 9ants){
		echo no 9ants kernel found, use build 9front first
		exit
	}
	echo 'WARNING MODIFIES PLAN9.INI AND BOOTUP'
	echo 'enter bootfile=9ants at bootup for new kernel'
	echo 'use bootfile=9pcf for previous kernel'
	sleep 5
	cd patched
	8c -FTVw gridlisten.c
	8l -o gridlisten gridlisten.8
	cp gridlisten /$objtype/bin
	cd ..
	cd hubfs1.1
	mk install
	cd ..
	cp frontmods/bootdir/grio /$objtype/bin
	cp scripts/* /rc/bin
	cp bootdir.extras/namespace.saveterm /lib/namespace.saveterm
	cp bootdir.extras/namespace.save9front /lib/namespace.save9front
	9fs 9fat
	cp /n/9fat/plan9.ini /n/9fat/p9ini.bak
	cp frontmods/plan9.ini /n/9fat/plan9.ini
	cp tools.tgz /n/9fat/tools.tgz
	cp 9ants /n/9fat/9ants
	echo 'home=/usr/$user; cd; . $home/lib/profile' >>/rc/bin/termrc
	cp doc/man.cpns /sys/man/1/cpns
	cp doc/man.rerootwin /sys/man/1/rerootwin
	cp doc/man.addwrroot /sys/man/1/addwrroot
	cp doc/man.plan9rc /sys/man/8/plan9rc
	cp doc/man.ventiprog /sys/man/8/ventiprog
	cp doc/antspaper.ms /sys/doc/ants.ms
	cp doc/ants.ps /sys/doc/ants.ps
	cp doc/modified.manpages/proc.man /sys/man/3/proc
	echo 'enter a password for remote access:'
	setpasswd=`{read}
	echo 'privpassword='$setpasswd >>/n/9fat/plan9.ini
	rm /env/setpasswd
	echo '9front-ANTS base install complete'
	exit
}

if(~ $1 vultr){
	build 9front
	build 9frontinstall
	9fs 9fat
	cp cfg/vultrplan9.ini /n/9fat/plan9.ini
	echo 'enter a password for remote access:'
	setpasswd=`{read}
	echo 'privpassword='$setpasswd >>/n/9fat/plan9.ini
	rm /env/setpasswd
	echo '9front-ANTS vultr node base install complete'
	exit ''
}

if(~ $1 vultrfossil){
	build portsinstall
	cd cfg
	cat vultdisk |disk/prep /dev/sdF0/plan9
#	hget http://files.9gridchan.org/fossil.tgz >>/root/386/bin/fossil.tgz
#	cd /root/386/bin
#	tar xzf fossil.tgz
	if (! test -e /mnt/web/ctl)
		webfs
	hg clone https://bitbucket.org/mycroftiv/fossiloventi
	cd fossiloventi
	INSTALL
	cd $builddir/cfg
	mkdir /tmp/stub
	mount /srv/boot /n/dist
	fossil/flfmt /dev/sdF0/fossil
	fossil/conf -w /dev/sdF0/fossil initfossil.conf
	fossil/fossil -f /dev/sdF0/fossil
	mount -c /srv/fossil /n/fossil
	bind /tmp/stub /n/dist/mail
	disk/mkfs -U -z 8192 -s /n/dist -d /n/fossil /sys/lib/sysconfig/proto/allproto
	echo 'home=/usr/$user; cd; . $home/lib/profile' >>/n/fossil/rc/bin/termrc
	fossil/conf -w /dev/sdF0/fossil fossil.conf
	venti/fmtarenas arenas /dev/sdF0/arenas
	venti/fmtisect isect /dev/sdF0/isect
	venti/fmtindex venti.conf
	venti/conf -w /dev/sdF0/arenas venti.conf
	cd ..
	build 9front
	build 9frontinstall
	cp /bin/grio /n/fossil/386/bin/grio
	9fs 9fat
	cp cfg/vfosvenp9.ini /n/9fat/plan9.ini
	echo 'venti/wrarena -h /net.alt/tcp!127.1!17034 -o 794624 /dev/sdF0/arenas 0x0' >/n/9fat/wrcmd
	echo 'enter a password for remote access:'
	setpasswd=`{read}
	echo 'privpassword='$setpasswd >>/n/9fat/plan9.ini
	rm /env/setpasswd
	ls /dev/sdF*
	echo 'vultr ANTS node installed, fshalt -r when ready'
	exit ''
}

bind -b $builddir/src.9.boot /sys/src/9/boot
bind -b $builddir/src.9.port /sys/src/9/port
bind -b $builddir/src.9.pc /sys/src/9/pc
bind -b $builddir/scripts /bin
bind $builddir /n/rootless
bind -bc $builddir/compiletemp /sys/src/9/pc

if(~ $1 worker){
	if(! ~ $user `{cat /dev/hostowner}){
		echo only hostowner can build a worker
		exit no.hostowner
	}
	echo WARNING FORMATS DRIVE SDC1
	sleep 10
	echo building worker sdC1
	disk/mbr -m /386/mbr /dev/sdC1/data
	disk/fdisk -baw /dev/sdC1/data
	disk/prep -bw -a^(9fat nvram) /dev/sdC1/plan9
	disk/format -b /386/pbslba -d -r 2 /dev/sdC1/9fat /386/9load $builddir/9pcram.gz $builddir/tools.tgz $builddir/cfg/plan9.ini
	dossrv -f /dev/sdC1/9fat c1fat
	mount -c /srv/c1fat /n/c1fat
	mkdir /n/c1fat/adm
	dircp $builddir/cfg/adm /n/c1fat/adm
	unmount /n/c1fat
	rm /srv/c1fat
	cp $builddir/cfg/nvram /dev/sdC1/nvram
	chmod 640 /dev/sdC1/nvram
	exit ''
}

if(~ $1 labshost){
	build extras
	cd patched
	echo 'installing ANTS userspace tools to host'
	8c -FTVw gridlisten.c
	8l -o gridlisten gridlisten.8
	cp gridlisten /$objtype/bin
	cd ..
	cd hubfs1.1
	mk install
	cd $builddir
	cd grio
	mk install
	cd $builddir
	cp scripts/* /rc/bin
	cp bootdir.extras/namespace.saveterm /lib/namespace.saveterm
	cp bootdir.extras/namespace.save9front /lib/namespace.save9front
	echo installing manpages 
	cp doc/man.cpns /sys/man/1/cpns
	cp doc/man.rerootwin /sys/man/1/rerootwin
	cp doc/man.addwrroot /sys/man/1/addwrroot
	cp doc/man.ventiprog /sys/man/8/ventiprog
	cp doc/man.plan9rc /sys/man/8/plan9rc
	cp doc/antspaper.ms /sys/doc/ants.ms
	cp doc/ants.ps /sys/doc/ants.ps
	mv /sys/man/3/proc /sys/man/3/oldproc
	mv /sys/man/8/boot /sys/man/8/oldboot
	cp doc/modified.manpages/proc.man /sys/man/3/proc
	cp doc/modified.manpages/boot.man /sys/man/8/boot
	echo 'userspace tools install complete'
	exit ''
}

if(~ $1 isoinstall){
	if(! ~ $user `{cat /dev/hostowner}){
		echo only hostowner can build isoinstall
		exit no.hostowner
	}
	echo WARNING changes your plan9.ini
	echo use build everything to build with no system changes
	sleep 5
	echo installing hubfs and grio and scripts
	cd patched
	8c -FTVw gridlisten.c
	8l -o gridlisten gridlisten.8
	cp gridlisten /$objtype/bin
	cd ..
	cd hubfs1.1
	mk install
	cd $builddir
	cd grio
	mk install
	cd $builddir
	cp scripts/* /rc/bin
	cp bootdir.extras/namespace.saveterm /lib/namespace.saveterm
	cp bootdir.extras/namespace.save9front /lib/namespace.save9front
	echo installing 9pcram kernel and tools.tgz and plan9.ini
	9fat:
	kernel=9pcram.gz
	if(test -e compiletemp/9pcram.gz)
		kernel=compiletemp/9pcram.gz
	cp $kernel /n/9fat/9pcram.gz
	cp tools.tgz /n/9fat/tools.tgz
	mv /n/9fat/plan9.ini /n/9fat/p9ini.old
	cp doc/PLAN9.INI /n/9fat/plan9.ini
	echo installing manpages 
	cp doc/man.cpns /sys/man/1/cpns
	cp doc/man.rerootwin /sys/man/1/rerootwin
	cp doc/man.addwrroot /sys/man/1/addwrroot
	cp doc/man.ventiprog /sys/man/8/ventiprog
	cp doc/man.plan9rc /sys/man/8/plan9rc
	cp doc/antspaper.ms /sys/doc/ants.ms
	cp doc/ants.ps /sys/doc/ants.ps
	mv /sys/man/3/proc /sys/man/3/oldproc
	mv /sys/man/8/boot /sys/man/8/oldboot
	cp doc/modified.manpages/proc.man /sys/man/3/proc
	cp doc/modified.manpages/boot.man /sys/man/8/boot
	echo install complete
	exit ''
}

if(~ $1 docs){
	echo building docs
	cp hubfs1.1/hubfs.man doc/man.hubfs
	cd doc
	cp man.cpns $builddir/sys/man/1/cpns
	cp man.rerootwin $builddir/sys/man/1/rerootwin
	cp man.addwrroot $builddir/sys/man/1/addwrroot
	cp man.ventiprog $builddir/sys/man/8/ventiprog
	cp man.plan9rc $builddir/sys/man/8/plan9rc
	cp man.hubfs $builddir/sys/man/4/hubfs
	cp modified.manpages/proc.man $builddir/sys/man/3/proc
	cp modified.manpages/boot.man $builddir/sys/man/8/boot
	troff -ms antspaper.ms | dpost >ants.ps
	cd $builddir
	exit ''
}

if(~ $1 everything){
	echo building everything
	build clean
	build patched
	build tools
	build extras
	build bootpaq
	build
	exit ''
}

if(~ $1 clean){
	echo building mk clean
	cd /sys/src/9/pc
	mk clean
	cd $builddir
	cd grio
	mk clean
	cd $builddir
	cd hubfs1.1
	mk clean
	cd $builddir
	rm root/bin/* >/dev/null >[2=1]
	rm bootdir.extras/bootpaq >/dev/null >[2=1]
	exit ''
}

if(~ $1 patched){
	echo building patched
	ramfs
	mkdir /tmp/rc
	mkdir /tmp/factotum
	dircp /sys/src/cmd/rc /tmp/rc
	dircp /sys/src/cmd/auth/factotum /tmp/factotum
	cp patched/rc.plan9.c /tmp/rc/plan9.c
	cp patched/factotumdat.h /tmp/factotum/dat.h
	cp patched/factotumfs.c /tmp/factotum/fs.c
	cp patched/factotumutil.c /tmp/factotum/util.c
	cd /tmp/rc
	mk
	cp $O.out $builddir/bootdir.extras/rc
	cd /tmp/factotum
	mk $O.factotum
	cp $O.factotum $builddir/bootdir.extras/factotum
	cd $builddir
	strip bootdir.extras/rc >/dev/null >[2=1]
	strip bootdir.extras/factotum >/dev/null >[2=1]
	rm -rf /tmp/rc
	rm -rf /tmp/factotum
	exit ''
}	

if(~ $1 extras){
	echo building extras
	cd grio
	mk clean
	mk
	cp $O.out ../bootdir.extras/grio
	cd ../hubfs1.1
	mk clean
	mk all
	cp $O.hubfs ../bootdir.extras/hubfs
	cp $O.hubshell ../bootdir.extras/hubshell
	cp hub ../bootdir.extras
	cd $builddir
	strip bootdir.extras/grio >/dev/null >[2=1]
	strip bootdir.extras/hubfs >/dev/null >[2=1]
	strip bootdir.extras/hubshell >/dev/null >[2=1]
	exit ''
}

if(~ $1 bootpaq){
	echo building bootpaq
	cp scripts/* bootdir.extras/root/bin
	cd bootdir.extras
	rm skel.tar
	tar cf skel.tar root
	cd $builddir
	rm root/bin/* >/dev/null >[2=1]
	cp cfg/mkpaq root/bin/_mkpaq
	if(~ $objtype amd64)
		cp cfg/mkpaq64 root/bin/_mkpaq
	cd root/bin
	. _mkpaq
	cd $builddir
	strip root/bin/* >/dev/null >[2=1]
	mkpaqfs -b 8192 -o bootdir.extras/bootpaq root/bin
	sha1sum bootdir.extras/bootpaq >>build.hashes
	exit ''
}

if(~ $1 tools){
	echo building tools
	rm root/bin/* >/dev/null >[2=1]
	tar czf root.targz root
	cp cfg/toolcopy root/bin/_toolcopy
	if(~ $objtype amd64)
		cp cfg/toolcopy64 root/bin/_toolcopy
	cd root/bin
	. _toolcopy
	cd $builddir
	strip root/bin/* >/dev/null >[2=1]
	ramfs -m /tmp
	tar cf /tmp/tools.tar root
	gzip -9 -c /tmp/tools.tar >tools.tgz
	rm /tmp/tools.tar
	cd $builddir
	sha1sum tools.tgz >>build.hashes
	exit ''
}

echo building kernel
rm root/bin/* >/dev/null >[2=1]
cp /bin/paqfs root/bin
cp /bin/usb/usbd root/bin
cp /bin/disk/partfs root/bin
cp /bin/bind root/bin
cp /bin/mount root/bin
cp /bin/read root/bin
cp /bin/cat root/bin
cp /bin/echo root/bin
cp /bin/test root/bin
strip root/bin/* >/dev/null >[2=1]
if(~ $1 ramfs){
	echo building kernel in tmp
	ramfs -m /tmp
	bind -bc /tmp /sys/src/9/pc
}
cd /sys/src/9/pc
mk 'CONF=pcram'
gzip -9 -c 9pcram > $builddir/compiletemp/9pcram.gz
cd $builddir
sha1sum compiletemp/9pcram.gz >>build.hashes
cp compiletemp/9pcram.gz 9pcram.gz
exit ''
