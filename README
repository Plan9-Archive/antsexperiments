This directory holds the source code modifications and compiled tools for a Plan 9 kernel that can boot with no root fileserver, and places all the post-kernel load bootup procedures into an rc-based environment. The user can also choose to bypass the normal bootup procedure entirely and create a small self-sufficient ramdisk based cpu server.

It supports most of the standard bootup options and configurations in plan9.ini, and adds the possibility of fine-grained interactive control over startup. The core kernel remains almost completely unmodified, but the traditional boot and init programs have been combined into a single, smaller program that aims to transfer control to rc as soon as possible. An rc script called "plan9rc" controls the functions of starting factotum, potentially creating a small ramfs based independent environment, starting venti/fossil/kfs or dialing an external fs in the fashion of a tcp booted cpu.

By setting interactive=yes in plan9.ini the user can control whether or not any or all of these services are started and with what variables. The user can also drop to an rc shell to work freely with whatever tools are compiled into /boot or setup in a ramfs. The kernel was compiled as a cpu kernel, but setting service=terminal should produce terminal-style behavior.

Other plan9.ini variables can be used to control the behavior of options additional boot time behavior. A provided skeleton fs setup can be controlled with the ramsetup variable, which defaults to use a provided script, ramskel. Another optional script can be run later in boot. The provided 'initskel' script (set initscript=initskel in plan9.ini) expects to find a rootfs.tgz (sample provided) in the 9fat: partition which it uses to acquire additional tools and start up CPU services from ramdisk. (also requires using the ramsetup=ramskel option). Note that this option may conflict with a standard rootstart script like cpurc or termrc so it may be most profitably used to create a foundation environment from which other services may be started 'a la carte'. 

To install without recompiling, place the 9pcram.gz kernel and the rootfs.tgz in your 9fat: partition and edit plan9.ini to use a boot menu to give you the option of using that kernel. Some additional tweaking and studying of what is going on will probably be required for effective use. The precompiled kernel also includes the writable /proc/ns mod which is helpful for dealing with strange namespaces on the fly.

This kernel version and software originally based on the Plan 9 source tree from December of 2009. Updated to compile with more recent kernels January 2013.
